version: "3.7"
services:
   api:
      build:
         context: ./
         dockerfile: fetroshop-api.Dockerfile
      image: fetroshop-api
      container_name: fetroshop-api
      restart: no # available options: no, always, on-failure, unless-stopped, on-abnormal
      working_dir: /app
      ports:
         - 3000:3000
         - 3001:3001
      networks:
         - fetroshop_network
      volumes:
         - fetroshop_api_volume:/app
      depends_on:
         db:
            condition: service_healthy
      links:
         - "db"
      healthcheck:
         test: ["CMD", "curl", "-f", "http://localhost:3000/welcome"]
         interval: 30s
         timeout: 10s
         retries: 5

   db:
      build:
         context: ./
         dockerfile: postgres.Dockerfile
      image: fetroshop-db
      container_name: fetroshop-db
      restart: no # available options: no, always, on-failure, unless-stopped, on-abnormal
      working_dir: /
      environment:
         POSTGRES_PASSWORD: postgres
         PGDATA: /var/lib/postgresql/data/pgdata
      ports:
         - 5432:5432
      volumes:
         - fetroshop_db_volume:/var/lib/postgresql/data
         - fetroshop_db_volume:/db
      networks:
         - fetroshop_network
      healthcheck:
         test: ["CMD-SHELL", "pg_isready -U postgres"]
         interval: 10s
         timeout: 5s
         retries: 5

   migrate:
      image: migrate/migrate
      command: -path=/db/migrations/ -database=postgresql://postgres:postgres@db:5432/fetroshop?sslmode=disable up
      volumes:
         - fetroshop_db_volume:/db
      depends_on:
         db:
            condition: service_healthy
      networks:
         - fetroshop_network

   web:
      build:
         context: ./
         dockerfile: fetroshop-web.Dockerfile
      image: fetroshop-web
      container_name: fetroshop-web
      restart: no # available options: no, always, on-failure, unless-stopped, on-abnormal
      working_dir: /app
      ports:
         - 3003:3003
      networks:
         - fetroshop_network
      volumes:
         - fetroshop_web_volume:/app
      depends_on:
         api:
            condition: service_healthy
      links:
         - "api"
      healthcheck:
         test: ["CMD", "curl", "-f", "http://localhost:3003"]
         interval: 30s
         timeout: 10s
         retries: 5
volumes:
   fetroshop_api_volume:
   fetroshop_web_volume:
   fetroshop_db_volume:
networks:
   fetroshop_network:
      driver: bridge
