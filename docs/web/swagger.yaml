definitions:
  model.Location:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.LocationListResponse:
    properties:
      code:
        description: http status code
        type: integer
      data:
        description: main data
        items:
          $ref: '#/definitions/model.Location'
        type: array
      errors:
        additionalProperties: {}
        description: error data
        type: object
      message:
        description: message from system
        type: string
      meta:
        allOf:
        - $ref: '#/definitions/model.listMeta'
        description: support data
      status:
        description: http status message
        type: string
    type: object
  model.Response:
    properties:
      code:
        description: http status code
        type: integer
      data:
        description: main data
      errors:
        additionalProperties: {}
        description: error data
        type: object
      message:
        description: message from system
        type: string
      meta:
        description: support data
      status:
        description: http status message
        type: string
    type: object
  model.listMeta:
    properties:
      filtered:
        type: integer
      selected:
        type: integer
      total:
        type: integer
    type: object
info:
  contact: {}
  description: Fetroshop API is a robust and efficient backend solution designed to
    power the online store app named Fetroshop. Developed using the Go programming
    language, this API serves as the backbone for managing the Content Management
    System (CMS) and handling various store-related functionalities.
  title: Fetroshop Web API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      parameters:
      - in: formData
        name: password
        required: true
        type: string
      - in: formData
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Login for customers
      tags:
      - Authentication
  /api/auth/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - Bearer: []
      summary: Logout for customers
      tags:
      - Authentication
  /api/auth/refresh:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - Bearer: []
      summary: Refresh for customers
      tags:
      - Authentication
  /api/auth/register:
    post:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      parameters:
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: fullName
        required: true
        type: string
      - in: formData
        minLength: 8
        name: password
        required: true
        type: string
      - in: formData
        name: phone
        required: true
        type: string
      - in: formData
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Register new user
      tags:
      - Authentication
  /api/brand/detail:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      description: Retrieve brand detail
      parameters:
      - in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get detail brand
      tags:
      - Brands
  /api/brand/list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      description: Retrieve brands list
      parameters:
      - default: 10
        in: query
        name: limit
        type: integer
      - default: 0
        in: query
        name: offset
        type: integer
      - enum:
        - code
        - name
        - updated_at
        - created_at
        in: query
        name: orderBy
        required: true
        type: string
      - enum:
        - ASC
        - DESC
        in: query
        name: orderDirection
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: List brands
      tags:
      - Brands
  /api/brand/list-by-prefix:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      description: Retrieve brands list by prefix
      parameters:
      - default: 10
        in: query
        name: limit
        type: integer
      - default: 0
        in: query
        name: offset
        type: integer
      - enum:
        - code
        - name
        - updated_at
        - created_at
        in: query
        name: orderBy
        required: true
        type: string
      - enum:
        - ASC
        - DESC
        in: query
        name: orderDirection
        required: true
        type: string
      - in: query
        name: prefix
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: List brands by prefix
      tags:
      - Brands
  /api/category/detail:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      description: Retrieve category detail
      parameters:
      - in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get detail category
      tags:
      - Categories
  /api/category/list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      description: Retrieve categories list
      parameters:
      - default: 10
        in: query
        name: limit
        type: integer
      - default: 0
        in: query
        name: offset
        type: integer
      - enum:
        - display_order
        - code
        - name
        - updated_at
        - created_at
        in: query
        name: orderBy
        required: true
        type: string
      - enum:
        - ASC
        - DESC
        in: query
        name: orderDirection
        required: true
        type: string
      - in: query
        name: parentCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: List categories
      tags:
      - Categories
  /api/location/city/list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      description: Retrieve cities list
      parameters:
      - default: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - default: 0
        in: query
        name: offset
        type: integer
      - enum:
        - id
        - name
        - updated_at
        - created_at
        in: query
        name: orderBy
        required: true
        type: string
      - enum:
        - ASC
        - DESC
        in: query
        name: orderDirection
        required: true
        type: string
      - in: query
        name: provinceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LocationListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: List cities
      tags:
      - Locations
  /api/location/district/list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      description: Retrieve districts list
      parameters:
      - in: query
        name: cityId
        required: true
        type: string
      - default: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - default: 0
        in: query
        name: offset
        type: integer
      - enum:
        - id
        - name
        - updated_at
        - created_at
        in: query
        name: orderBy
        required: true
        type: string
      - enum:
        - ASC
        - DESC
        in: query
        name: orderDirection
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LocationListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: List districts
      tags:
      - Locations
  /api/location/province/list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      description: Retrieve provinces list
      parameters:
      - default: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - default: 0
        in: query
        name: offset
        type: integer
      - enum:
        - id
        - name
        - updated_at
        - created_at
        in: query
        name: orderBy
        required: true
        type: string
      - enum:
        - ASC
        - DESC
        in: query
        name: orderDirection
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LocationListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: List provinces
      tags:
      - Locations
  /api/location/subdistrict/list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      description: Retrieve subdistricts list
      parameters:
      - in: query
        name: districtId
        required: true
        type: string
      - default: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - default: 0
        in: query
        name: offset
        type: integer
      - enum:
        - id
        - name
        - updated_at
        - created_at
        in: query
        name: orderBy
        required: true
        type: string
      - enum:
        - ASC
        - DESC
        in: query
        name: orderDirection
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LocationListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: List subdistricts
      tags:
      - Locations
securityDefinitions:
  Bearer:
    description: Use format 'Bearer YOUR_TOKEN'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
