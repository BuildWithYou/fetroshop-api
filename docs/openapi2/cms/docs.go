// Package cms Code generated by swaggo/swag. DO NOT EDIT
package cms

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/login": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login for users",
                "parameters": [
                    {
                        "type": "string",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout for users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh for customers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "fullName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 8,
                        "type": "string",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/brand/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "Create brand",
                "parameters": [
                    {
                        "type": "string",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "icon",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/brand/detail": {
            "get": {
                "description": "Retrieve brand detail",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "Get detail brand",
                "parameters": [
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/brand/list": {
            "get": {
                "description": "Retrieve brands list",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "List brands",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "code",
                            "name",
                            "updated_at",
                            "created_at"
                        ],
                        "type": "string",
                        "name": "orderBy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "name": "orderDirection",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/brand/list-by-prefix": {
            "get": {
                "description": "Retrieve brands list by prefix",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "List brands by prefix",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "code",
                            "name",
                            "updated_at",
                            "created_at"
                        ],
                        "type": "string",
                        "name": "orderBy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "name": "orderDirection",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "prefix",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/brand/{code}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "Update brand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "icon",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "Delete brand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "forceDelete",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/category/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create category",
                "parameters": [
                    {
                        "type": "string",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "displayOrder",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "icon",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "parentCode",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/category/detail": {
            "get": {
                "description": "Retrieve category detail",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get detail category",
                "parameters": [
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/category/list": {
            "get": {
                "description": "Retrieve categories list",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "List categories",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "display_order",
                            "code",
                            "name",
                            "updated_at",
                            "created_at"
                        ],
                        "type": "string",
                        "name": "orderBy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "name": "orderDirection",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "parentCode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/category/{code}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "displayOrder",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "icon",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "parentCode",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "forceDelete",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/location/city/list": {
            "get": {
                "description": "Retrieve cities list",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "List cities",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "name",
                            "updated_at",
                            "created_at"
                        ],
                        "type": "string",
                        "name": "orderBy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "name": "orderDirection",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "provinceId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.locationListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/location/district/list": {
            "get": {
                "description": "Retrieve districts list",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "List districts",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cityId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "name",
                            "updated_at",
                            "created_at"
                        ],
                        "type": "string",
                        "name": "orderBy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "name": "orderDirection",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.locationListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/location/province/list": {
            "get": {
                "description": "Retrieve provinces list",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "List provinces",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "name",
                            "updated_at",
                            "created_at"
                        ],
                        "type": "string",
                        "name": "orderBy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "name": "orderDirection",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.locationListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/location/subdistrict/list": {
            "get": {
                "description": "Retrieve subdistricts list",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "List subdistricts",
                "parameters": [
                    {
                        "type": "string",
                        "name": "districtId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "name",
                            "updated_at",
                            "created_at"
                        ],
                        "type": "string",
                        "name": "orderBy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "name": "orderDirection",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.locationListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/product/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create product",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "brandId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "hasMultipleVarian",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "minimumPurchase",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "quantity",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "shortDescription",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "sku",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "slug",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "storeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "varianCode",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "virtualQuantity",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "weight",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "accept image/png, image/jpeg",
                        "name": "icon",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.productDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/product/list": {
            "get": {
                "description": "Retrieve products list",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "code",
                            "name",
                            "updated_at",
                            "created_at"
                        ],
                        "type": "string",
                        "name": "orderBy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "name": "orderDirection",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product Code or Product Name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.productsListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/product/{code}": {
            "get": {
                "description": "Retrieve product detail",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get detail product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.productDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "brandId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "hasMultipleVarian",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "minimumPurchase",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "quantity",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "shortDescription",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "sku",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "slug",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "storeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "varianCode",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "virtualQuantity",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "weight",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "accept image/png, image/jpeg",
                        "name": "icon",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.productDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "forceDelete",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/store/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stores"
                ],
                "summary": "Create store",
                "parameters": [
                    {
                        "type": "string",
                        "name": "address",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "cityId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "store code (unique)",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "districtId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "latitude",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "longitude",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "postalCode",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "provinceId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "subdistrictId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "accept image/png, image/jpeg",
                        "name": "icon",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.storeDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/store/list": {
            "get": {
                "description": "Retrieve stores list",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stores"
                ],
                "summary": "List stores",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "code",
                            "name",
                            "updated_at",
                            "created_at"
                        ],
                        "type": "string",
                        "name": "orderBy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "name": "orderDirection",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Store Code or Store Name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.storesListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/store/{code}": {
            "get": {
                "description": "Retrieve store detail",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stores"
                ],
                "summary": "Get detail store",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Store Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.storeDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stores"
                ],
                "summary": "Update store",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Store Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "address",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "cityId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "store code (unique)",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "districtId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "latitude",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "longitude",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "postalCode",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "provinceId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "subdistrictId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "accept image/png, image/jpeg",
                        "name": "icon",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.storeDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stores"
                ],
                "summary": "Delete store",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Store Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "forceDelete",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.IDName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.ProductDetail": {
            "type": "object",
            "properties": {
                "brand": {
                    "$ref": "#/definitions/model.IDName"
                },
                "brandId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "hasMultipleVarian": {
                    "type": "boolean"
                },
                "isActive": {
                    "type": "boolean"
                },
                "minimumPurchase": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "shortDescription": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "store": {
                    "$ref": "#/definitions/model.IDName"
                },
                "storeId": {
                    "type": "integer"
                },
                "varianCode": {
                    "type": "string"
                },
                "virtualQuantity": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "model.ProductListData": {
            "type": "object",
            "properties": {
                "brandId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "hasMultipleVarian": {
                    "type": "boolean"
                },
                "isActive": {
                    "type": "boolean"
                },
                "minimumPurchase": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "shortDescription": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "storeId": {
                    "type": "integer"
                },
                "varianCode": {
                    "type": "string"
                },
                "virtualQuantity": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "model.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "http status code",
                    "type": "integer"
                },
                "data": {
                    "description": "main data"
                },
                "errors": {
                    "description": "error data",
                    "type": "object",
                    "additionalProperties": {}
                },
                "message": {
                    "description": "message from system",
                    "type": "string"
                },
                "meta": {
                    "description": "support data"
                },
                "status": {
                    "description": "http status message",
                    "type": "string"
                }
            }
        },
        "model.StoreDetail": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "$ref": "#/definitions/model.IDName"
                },
                "code": {
                    "type": "string"
                },
                "district": {
                    "$ref": "#/definitions/model.IDName"
                },
                "icon": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "province": {
                    "$ref": "#/definitions/model.IDName"
                },
                "subdistrict": {
                    "$ref": "#/definitions/model.IDName"
                }
            }
        },
        "model.StoreListData": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cityId": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "districtId": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "provinceId": {
                    "type": "integer"
                },
                "subdistrictId": {
                    "type": "integer"
                }
            }
        },
        "model.listMeta": {
            "type": "object",
            "properties": {
                "filtered": {
                    "type": "integer"
                },
                "selected": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.locationListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "http status code",
                    "type": "integer"
                },
                "data": {
                    "description": "main data",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.IDName"
                    }
                },
                "errors": {
                    "description": "error data",
                    "type": "object",
                    "additionalProperties": {}
                },
                "message": {
                    "description": "message from system",
                    "type": "string"
                },
                "meta": {
                    "description": "support data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.listMeta"
                        }
                    ]
                },
                "status": {
                    "description": "http status message",
                    "type": "string"
                }
            }
        },
        "model.productDetailResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "http status code",
                    "type": "integer"
                },
                "data": {
                    "description": "main data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.ProductDetail"
                        }
                    ]
                },
                "errors": {
                    "description": "error data",
                    "type": "object",
                    "additionalProperties": {}
                },
                "message": {
                    "description": "message from system",
                    "type": "string"
                },
                "meta": {
                    "description": "support data"
                },
                "status": {
                    "description": "http status message",
                    "type": "string"
                }
            }
        },
        "model.productsListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "http status code",
                    "type": "integer"
                },
                "data": {
                    "description": "main data",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ProductListData"
                    }
                },
                "errors": {
                    "description": "error data",
                    "type": "object",
                    "additionalProperties": {}
                },
                "message": {
                    "description": "message from system",
                    "type": "string"
                },
                "meta": {
                    "description": "support data"
                },
                "status": {
                    "description": "http status message",
                    "type": "string"
                }
            }
        },
        "model.storeDetailResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "http status code",
                    "type": "integer"
                },
                "data": {
                    "description": "main data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.StoreDetail"
                        }
                    ]
                },
                "errors": {
                    "description": "error data",
                    "type": "object",
                    "additionalProperties": {}
                },
                "message": {
                    "description": "message from system",
                    "type": "string"
                },
                "meta": {
                    "description": "support data"
                },
                "status": {
                    "description": "http status message",
                    "type": "string"
                }
            }
        },
        "model.storesListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "http status code",
                    "type": "integer"
                },
                "data": {
                    "description": "main data",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StoreListData"
                    }
                },
                "errors": {
                    "description": "error data",
                    "type": "object",
                    "additionalProperties": {}
                },
                "message": {
                    "description": "message from system",
                    "type": "string"
                },
                "meta": {
                    "description": "support data"
                },
                "status": {
                    "description": "http status message",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Use format 'Bearer YOUR_TOKEN'",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Fetroshop CMS API",
	Description:      "Fetroshop API is a robust and efficient backend solution designed to power the online store app named Fetroshop. Developed using the Go programming language, this API serves as the backbone for managing the Content Management System (CMS) and handling various store-related functionalities.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
